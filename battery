#!/usr/bin/env python3
#
# A battery indicator blocklet script for i3blocks
# Depends on acpi CLI

from subprocess import check_output
from sys import exit
import sys

if len(sys.argv) > 1:
    bat = int(sys.argv[1])
else:
    bat = 0

status = check_output(['acpi'], universal_newlines=True)

if not status:
    # stands for no battery found
    fulltext = "<span color='red'><span font='FontAwesome'>\uf00d \uf240</span></span>"
    percentleft = 100
else:
    status = status.split("\n")[bat]
    state = status.split(": ")[1].split(", ")[0]
    commasplitstatus = status.split(", ")
    percentleft = int(commasplitstatus[1].rstrip("%\n"))

    # stands for charging
    FA_LIGHTNING = "<span color='yellow'><span font='FontAwesome'>\uf0e7</span></span>"

    # stands for plugged in
    FA_PLUG = "<span font='FontAwesome'>\uf1e6</span>"

    fulltext = ""
    timeleft = ""

    if state == "Discharging":
        time = commasplitstatus[-1].split()[0]
        time = ":".join(time.split(":")[0:2])
        timeleft = " ({})".format(time)
    elif state == "Full":
        fulltext = FA_PLUG + " "
    elif state == "Unknown":
        fulltext = "" # "<span font='FontAwesome'>\uf128</span> "
    else:
        fulltext = FA_LIGHTNING + " " + FA_PLUG + " "

    def color(percent):
        if percent < 10:
            # exit code 33 will turn background red
            return "#FFFFFF"
        if percent < 20:
            return "#FF3300"
        if percent < 30:
            return "#FF6600"
        if percent < 40:
            return "#FF9900"
        if percent < 50:
            return "#FFCC00"
        if percent < 60:
            return "#FFFF00"
        if percent < 70:
            return "#FFFF33"
        if percent < 80:
            return "#FFFF66"
        return "#FFFFFF"
    
    def text(percentage):
        _BATTERY_LEVELS = ["\uf244", "\uf243", "\uf242", "\uf241", "\uf240"]
        _BATTERY_FULL =   "\uf058"

        if percentage < 10:
            return _BATTERY_LEVELS[0]
        elif percentage < 25:
            return _BATTERY_LEVELS[1]
        elif percentage < 50:
            return _BATTERY_LEVELS[2]
        elif percentage < 85:
            return _BATTERY_LEVELS[3]
        elif percentage > 98:
            return _BATTERY_FULL    
        else:
            return _BATTERY_LEVELS[4]
        return "<span font='FontAwesome'>{}</span> ".format(percentage)
    form = "<span color=\"{}\"> {} </span>"
    fulltext += form.format(color(percentleft), text(percentleft))
#    fulltext += timeleft

print(fulltext)
print(fulltext)
if percentleft < 10:
    exit(33)

